rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function ownerMatchesRequest() {
      return isSignedIn() && request.resource != null && request.resource.data.userId == request.auth.uid;
    }

    function ownerMatchesResource() {
      return isSignedIn() && resource.data.userId != null && resource.data.userId == request.auth.uid;
    }

    match /users/{userId} {
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow read: if isSignedIn() && request.auth.uid == userId;
      allow update: if isSignedIn() && request.auth.uid == userId && request.resource.data.uid == userId;
      allow delete: if false;
    }

    match /feedback/{feedbackId} {
      allow create: if ownerMatchesRequest();
      allow read: if ownerMatchesResource();
      allow update: if ownerMatchesResource() && ownerMatchesRequest();
      allow delete: if ownerMatchesResource();
    }

    match /analyses/{analysisId} {
      allow create: if ownerMatchesRequest();
      allow read: if ownerMatchesResource();
      allow update: if ownerMatchesResource() && ownerMatchesRequest();
      allow delete: if ownerMatchesResource();
    }

    match /kb/{docId} {
      allow create: if ownerMatchesRequest();
      allow read: if ownerMatchesResource() || resource.data.visibility == 'public';
      allow update: if ownerMatchesResource() && ownerMatchesRequest();
      allow delete: if ownerMatchesResource();
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
